<interne:BaseExplorateurFichier
    x:ClassModifier="public"
    x:Class="GerCRUD_FW3ma_Namespace.Frameworks3ma.nsWpfOutils.Controles.ExplorateurFichiersTree"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interne="clr-namespace:GerCRUD_FW3ma_Namespace.Frameworks3ma.nsWpfOutils.Interne.Controles.ExplorateurFichiers"
    xmlns:controles="clr-namespace:GerCRUD_FW3ma_Namespace.Frameworks3ma.nsWpfOutils.Interne.Controles.ExplorateurFichiers.Controles"
    xmlns:converters="clr-namespace:GerCRUD_FW3ma_Namespace.Frameworks3ma.nsWpfOutils.Converters"
    xmlns:local="clr-namespace:GerCRUD_FW3ma_Namespace.Frameworks3ma.nsWpfOutils.Controles"
    xmlns:layout="clr-namespace:GerCRUD_FW3ma_Namespace.Frameworks3ma.nsWpfOutils.Controles.Layout"
    mc:Ignorable="d"
    d:DesignHeight="450"
    d:DesignWidth="800"
    PreviewKeyDown="HandlePreviewKeyDown"
    Focusable="True"
    ContextMenuOpening="ContextMenu_OnOpening">
    <interne:BaseExplorateurFichier.ContextMenu>
        <ContextMenu />
    </interne:BaseExplorateurFichier.ContextMenu>
    <interne:BaseExplorateurFichier.Resources>
        <local:ConverterViewFilter x:Key="CvViewFilter" />
        <converters:ConverterUniverselVisibility x:Key="CvUniverselVisibility" />
    </interne:BaseExplorateurFichier.Resources>
    <Grid
        AllowDrop="True"
        Drop="HandleDrop"
        DragOver="HandleDragOver"
        DragEnter="HandleDragOver"
        DragLeave="HandleDragLeave">
        <layout:StretchingTreeView
            x:Name="TreeView"
            TreeViewItem.Expanded="TreeView_Expanded"
            SelectedItemChanged="TreeView_SelectedItemChanged"
            PreviewMouseRightButtonDown="TreeView_PreviewMouseRightButtonDown"
            PreviewMouseWheel="PreviewMouseWheel"
            Tag="{Binding NodeParent, RelativeSource={RelativeSource AncestorType=UserControl}}"
            Background="Transparent"
            BorderThickness="0">
            <layout:StretchingTreeView.ItemsSource>
                <MultiBinding Converter="{StaticResource CvViewFilter}">
                    <Binding Path="NodeParent.Enfants" RelativeSource="{RelativeSource AncestorType=UserControl}" />
                    <Binding Path="Affichage" RelativeSource="{RelativeSource AncestorType=UserControl}" />
                </MultiBinding>
            </layout:StretchingTreeView.ItemsSource>
            <layout:StretchingTreeView.ItemContainerStyle>
                <Style TargetType="{x:Type layout:StretchingTreeViewItem}" BasedOn="{StaticResource {x:Type layout:StretchingTreeViewItem}}">
                    <Setter Property="IsExpanded">
                        <Setter.Value>
                            <!--  Permet d'éviter les warning pour les Fichier qui n'ont pas la prop "EstOuvert"  -->
                            <PriorityBinding>
                                <Binding Path="EstOuvert" Mode="TwoWay" />
                            </PriorityBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="IsSelected" Value="{Binding EstSelectionneeUnique, Mode=TwoWay}" />
                    <EventSetter Event="MouseDoubleClick" Handler="HandleNodeDoubleClick" />
                </Style>
            </layout:StretchingTreeView.ItemContainerStyle>
            <layout:StretchingTreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type interne:NodeExplorateurDossier}">
                    <HierarchicalDataTemplate.ItemsSource>
                        <MultiBinding Converter="{StaticResource CvViewFilter}">
                            <Binding Path="Enfants" />
                            <Binding Path="Affichage" RelativeSource="{RelativeSource AncestorType=UserControl}" />
                        </MultiBinding>
                    </HierarchicalDataTemplate.ItemsSource>
                    <DockPanel MouseMove="HandleMouseMove" Margin="2,2,5,2">
                        <!--  Image (récup de windows)  -->
                        <Image
                            DragOver="Folder_DragOver"
                            Visibility="{Binding Contexte.IconeCustom, Converter={StaticResource CvUniverselVisibility}, ConverterParameter=False}"
                            Source="{Binding Icone}"
                            Margin="0,0,2,0"
                            Height="16" />
                        <!--  ou icone SegoeFluentIcons  -->
                        <TextBlock
                            Margin="0,0,2,0"
                            DragOver="Folder_DragOver"
                            Visibility="{Binding Contexte.IconeCustom, Converter={StaticResource CvUniverselVisibility}}"
                            Text="{Binding Contexte.IconeCustom}"
                            Foreground="{Binding Contexte.IconeCustomCouleur}"
                            FontFamily="{StaticResource SegoeFluentIcons}"
                            FontSize="14" />
                        <TextBox
                            Height="16"
                            LostFocus="TextBoxNode_LostFocus"
                            VerticalAlignment="Center"
                            Text="{Binding Nom, Mode=OneWay}"
                            DataContext="{Binding}">
                            <TextBox.Style>
                                <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                    <Style.Triggers>
                                        <!--  Use a DataTrigger to apply the style when IsEditing is true  -->
                                        <DataTrigger Binding="{Binding EstEnEdition}" Value="False">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Setter Property="IsHitTestVisible" Value="False" />
                                            <Setter Property="IsReadOnly" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </DockPanel>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type interne:NodeExplorateurFichier}">
                    <ContentControl>
                        <DockPanel MouseMove="HandleMouseMove" Margin="2,2,5,2">
                            <!--  Image (récup de windows)  -->
                            <Image
                                Visibility="{Binding Contexte.IconeCustom, Converter={StaticResource CvUniverselVisibility}, ConverterParameter=False}"
                                Source="{Binding Icone}"
                                Margin="0,0,2,0"
                                Height="16" />
                            <!--  ou icone SegoeFluentIcons  -->
                            <TextBlock
                                Margin="0,0,2,0"
                                Visibility="{Binding Contexte.IconeCustom, Converter={StaticResource CvUniverselVisibility}}"
                                Text="{Binding Contexte.IconeCustom}"
                                Foreground="{Binding Contexte.IconeCustomCouleur}"
                                FontFamily="{StaticResource SegoeFluentIcons}"
                                FontSize="14" />
                            <TextBox
                                LostFocus="TextBoxNode_LostFocus"
                                VerticalAlignment="Center"
                                Text="{Binding Nom, Mode=OneWay}"
                                DataContext="{Binding}">
                                <TextBox.Style>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <!--  Use a DataTrigger to apply the style when IsEditing is true  -->
                                            <DataTrigger Binding="{Binding EstEnEdition}" Value="False">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="IsHitTestVisible" Value="False" />
                                                <Setter Property="IsReadOnly" Value="True" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </DockPanel>
                    </ContentControl>
                </DataTemplate>
            </layout:StretchingTreeView.Resources>
        </layout:StretchingTreeView>
        <controles:PopupActionDnD x:Name="PopupTooltipDrag" PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=UserControl}}" />
    </Grid>
</interne:BaseExplorateurFichier>

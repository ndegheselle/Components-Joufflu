<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Joufflu.Inputs.Components"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:fonts="clr-namespace:Joufflu.Shared.Resources.Fonts;assembly=Joufflu.Shared">
    <Style TargetType="{x:Type local:FilePicker}">
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FilePicker}">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:FilePicker}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <adonisControls:ValidationErrorIndicator
                            x:Name="ErrorAlertHost"
                            ValidatedElement="{Binding ., RelativeSource={RelativeSource AncestorType=local:FilePicker}}"
                            IsValidatedElementFocused="{Binding IsFocused, RelativeSource={RelativeSource AncestorType=local:FilePicker}}"
                            IsErrorMessageDisplayOnFocusEnabled="True"
                            IsErrorMessageDisplayOnMouseOverEnabled="True"
                            ErrorMessagePlacement="Top"
                            Visibility="Collapsed"
                            Margin="8,0,4,0" />

                        <TextBox
                            x:Name="ErrorBorder"
                            Grid.Column="1"
                            MinWidth="100"
                            Text="{Binding FilePath, TargetNullValue='', Mode=TwoWay}" />
                        <Button
                            Command="{Binding ClearCommand}"
                            Grid.Column="2"
                            Margin="2,0,0,0">
                            <Button.Resources>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding FilePath}" Value="">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Resources>
                            <fonts:Icon Foreground="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" Text="{x:Static fonts:IconFont.CircleXmark}" />
                        </Button>
                        <Button
                            Grid.Column="3"
                            Margin="2,0,0,0"
                            Command="{Binding SelectCommand}">
                            <fonts:Icon Foreground="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" Text="{x:Static fonts:IconFont.File}" />
                        </Button>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="ErrorAlertHost" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ErrorBorder" Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                            <Setter TargetName="ErrorBorder" Property="BorderThickness" Value="{DynamicResource {x:Static adonisUi:Dimensions.BorderThickness}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>